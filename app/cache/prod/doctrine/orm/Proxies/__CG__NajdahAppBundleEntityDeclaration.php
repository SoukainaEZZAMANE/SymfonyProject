<?php

namespace Proxies\__CG__\Najdah\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Declaration extends \Najdah\AppBundle\Entity\Declaration implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'date', 'x', 'y', 'adresse', 'nbrBlesses', 'natureLanceur', 'description', 'lienRapport', 'citoyen', 'ville', 'intervenants', 'etat', 'type', 'attachements');
        }

        return array('__isInitialized__', 'id', 'date', 'x', 'y', 'adresse', 'nbrBlesses', 'natureLanceur', 'description', 'lienRapport', 'citoyen', 'ville', 'intervenants', 'etat', 'type', 'attachements');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Declaration $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setX($x)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setX', array($x));

        return parent::setX($x);
    }

    /**
     * {@inheritDoc}
     */
    public function getX()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getX', array());

        return parent::getX();
    }

    /**
     * {@inheritDoc}
     */
    public function setY($y)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setY', array($y));

        return parent::setY($y);
    }

    /**
     * {@inheritDoc}
     */
    public function getY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getY', array());

        return parent::getY();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse($adresse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', array($adresse));

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', array());

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrBlesses($nbrBlesses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrBlesses', array($nbrBlesses));

        return parent::setNbrBlesses($nbrBlesses);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrBlesses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrBlesses', array());

        return parent::getNbrBlesses();
    }

    /**
     * {@inheritDoc}
     */
    public function setNatureLanceur($natureLanceur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNatureLanceur', array($natureLanceur));

        return parent::setNatureLanceur($natureLanceur);
    }

    /**
     * {@inheritDoc}
     */
    public function getNatureLanceur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNatureLanceur', array());

        return parent::getNatureLanceur();
    }

    /**
     * {@inheritDoc}
     */
    public function setCitoyen(\Najdah\UserBundle\Entity\Citoyen $citoyen = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCitoyen', array($citoyen));

        return parent::setCitoyen($citoyen);
    }

    /**
     * {@inheritDoc}
     */
    public function getCitoyen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCitoyen', array());

        return parent::getCitoyen();
    }

    /**
     * {@inheritDoc}
     */
    public function addIntervenant(\Najdah\UserBundle\Entity\User $intervenants)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIntervenant', array($intervenants));

        return parent::addIntervenant($intervenants);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIntervenant(\Najdah\UserBundle\Entity\User $intervenants)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIntervenant', array($intervenants));

        return parent::removeIntervenant($intervenants);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntervenants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntervenants', array());

        return parent::getIntervenants();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(\Najdah\AppBundle\Entity\EtatDeclaration $etat = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', array($etat));

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', array());

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(\Najdah\AppBundle\Entity\TypeDeclaration $type = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setVille(\Najdah\AppBundle\Entity\Ville $ville = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVille', array($ville));

        return parent::setVille($ville);
    }

    /**
     * {@inheritDoc}
     */
    public function getVille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVille', array());

        return parent::getVille();
    }

    /**
     * {@inheritDoc}
     */
    public function setLienRapport($lienRapport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLienRapport', array($lienRapport));

        return parent::setLienRapport($lienRapport);
    }

    /**
     * {@inheritDoc}
     */
    public function getLienRapport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLienRapport', array());

        return parent::getLienRapport();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadDir', array());

        return parent::getUploadDir();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', array());

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function addAttachement(\Najdah\AppBundle\Entity\Attachement $attachements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAttachement', array($attachements));

        return parent::addAttachement($attachements);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAttachement(\Najdah\AppBundle\Entity\Attachement $attachements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAttachement', array($attachements));

        return parent::removeAttachement($attachements);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttachements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttachements', array());

        return parent::getAttachements();
    }

}
